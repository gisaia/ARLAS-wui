/*
 * Licensed to Gisaïa under one or more contributor
 * license agreements. See the NOTICE.txt file distributed with
 * this work for additional information regarding copyright
 * ownership. Gisaïa licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

@import '../styles/variables.scss';
@import '../styles/app/sizes.scss';

.app-container {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.arlas-progression {
  width: 100%;
  position: absolute;
  top: 0;
}

.arlas-map {
  display: flex;
  width: 100%;
  height: 100%;
}

.side-result-list-toggle {
  z-index: 2;
  position: absolute;
  top: 50%;
  transform: translate(0, -50%);
  right: $preview-result-list-width;
  display: flex;
  justify-content: center;
  flex-direction: column;

  .side-result-list-icon {
    background-color: white;
    cursor: pointer;
    height: $icon-size;
    width: $icon-size;
  }
}

.side-result-list-toggle-open {
  right: $result-list-width;
}

.side-result-list-toggle-open-no-grid {
  right: 0px;
}

.side-result-list-preview {
  width: $preview-result-list-width;
  height: 100%;
  position: absolute;
  right: 0;
  display: block;
  background-color: white;
}

.side-result-list-preview-close {
  display: none;
}

.side-result-list-preview .resultgrid__icon_check {
  display: none;
}

.side-result-list {
  width: 0;
  height: 100%;
  position: absolute;
  right: 0;
  visibility: hidden;
  background-color: white;
  overflow: hidden;
}

.one-tab ::ng-deep.mat-tab-header{
  display: none;
}

.side-result-list-open {
  display: block;
  width: 450px;
  visibility: visible;
}

.rotate-icon {
  transform: rotate(180deg);
}

.left_resultlist_wrapper {
  height: calc(100vh - 50px);
  overflow: hidden;
}

.one-tab .left_resultlist_wrapper {
  height: 100vh;
  overflow: hidden;
}

.arlas-analytics-toggle {
  position: absolute;
  left: $analytics-board-width;
  top: 50%;
  transform: translate(0, -50%);
  height: $icon-size;
  z-index: 1;
  background-color: white;
  cursor: pointer;
}

.arlas-analytics-toggle:hover {
  background-color: #f5f5f5;
}

.arlas-analytics-rotate {
  transform: rotate(180deg);
}



.arlas-analytics--container {
  width: $analytics-board-width;
  max-height: calc(100vh - $top-menu-height);
  overflow: auto;
}

::-webkit-scrollbar {
  width: 6px;
  background-color: #f5f5f5;
}

::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px rgba(105, 105, 105, 0.3);
  box-shadow: inset 0 0 6px rgba(105, 105, 105, 0.3);
  background-color: #f5f5f5;
}

::-webkit-scrollbar-thumb {
  background-color: #b1aeae;
}

.arlas-map-action {
  position: absolute;
  top: 195px;
  right: 7px;
  z-index: 1;
}

.app-container-reduce {
  ::ng-deep.arlas-timeline--container {
    width: calc(100% - ($result-list-width + $sm-spacing * 2));
    left: $sm-spacing;
  }

  .arlas-filters-chips {
    left: calc((100vw - ($left-menu-width + $result-list-width)) / 2);
    max-width: calc((100vw - ($left-menu-width + $result-list-width)) / 2 - 2 * $lg-spacing);
  }

  ::ng-deep.map_container {
    width: calc(100% - $result-list-width);
  }
}

.app-container-reduce-analytics {
  ::ng-deep.arlas-timeline--container {
    width: calc(100% - ($result-list-width + $sm-spacing * 2 + $analytics-board-width));
    left: calc($analytics-board-width + $sm-spacing) !important;
  }

  .arlas-filters-chips {
    left: calc((100vw + $analytics-board-width - ($left-menu-width + $result-list-width)) / 2);
    max-width: calc((100vw + $analytics-board-width - ($left-menu-width + $result-list-width)) / 2 - 2 * $lg-spacing);
  }

  ::ng-deep.map_container {
    width: calc(100% - $result-list-width - $analytics-board-width);
  }
}

.app-container-with-list {
  ::ng-deep.arlas-timeline--container {
    width: calc(100% - ($preview-result-list-width + 2 * $sm-margin));
    left: $sm-spacing;
  }

  .arlas-filters-chips {
    left: calc((100vw - ($left-menu-width + $preview-result-list-width)) / 2);
    max-width: calc((100vw - ($left-menu-width + $preview-result-list-width)) / 2 - 2 * $lg-spacing);
  }

  ::ng-deep.map_container {
    width: calc(100% - $preview-result-list-width);
  }
}

.app-container-with-list-analytics {
  ::ng-deep.arlas-timeline--container {
    width: calc(100% - ($preview-result-list-width + 2 * $sm-margin + $analytics-board-width));
    left: calc($analytics-board-width + $sm-spacing) !important;
  }

  .arlas-filters-chips {
    left: calc((100vw + $analytics-board-width - ($left-menu-width + $preview-result-list-width)) / 2);
    max-width: calc((100vw + $analytics-board-width - ($left-menu-width + $preview-result-list-width)) / 2 - 2 * $lg-spacing);
  }

  ::ng-deep.map_container {
    width: calc(100% - $preview-result-list-width - $analytics-board-width);
  }
}

.app-container-reduce-analytics,
.app-container-reduce {
  .arlas-map-action,
  .arlas-map-settings {
    right: calc($result-list-width + $sm-spacing);
  }

  ::ng-deep.basemap-container {
    right: calc($result-list-width + $sm-spacing + $map-actions-width + $sm-spacing) !important;
  }

  ::ng-deep.bookmark-shortcut {
    top: 30px;
    right: calc($result-list-width + $sm-spacing);
  }

  ::ng-deep.current-coordinate {
    right: 570px;
  }
}

.app-container-with-list-analytics,
.app-container-with-list {
  .arlas-map-action,
  .arlas-map-settings {
    right: calc($preview-result-list-width + $sm-spacing);
  }

  ::ng-deep.basemap-container {
    right: calc($preview-result-list-width + $sm-spacing + $map-actions-width + $sm-spacing) !important;
  }

  ::ng-deep.bookmark-shortcut {
    right: calc($preview-result-list-width + $sm-spacing);
  }

  ::ng-deep.current-coordinate {
    right: 270px;
  }
}

.app-container-with-list,
.app-container-reduce {
  ::ng-deep.arlas-time-shortcuts--container {
    left: calc($sm-spacing);
  }
}

.app-container-with-list-analytics,
.app-container-reduce-analytics {
  ::ng-deep.arlas-time-shortcuts--container {
    left: calc($analytics-board-width + $sm-spacing);
  }
}

.app-container-timeline-hidden {
  ::ng-deep.mapboxgl-ctrl-scale {
    bottom: calc($sm-spacing - $map-scale-border-width);
  }

  ::ng-deep.current-coordinate {
    bottom: $sm-spacing;
  }

  ::ng-deep.arlas-time-shortcuts--container {
    bottom: 0;
  }
}

.app-container-timeline-legend {
  ::ng-deep.mapboxgl-ctrl-scale {
    bottom: calc($timeline-with-legend-height + $sm-spacing - $map-scale-border-width);
  }

  ::ng-deep.current-coordinate {
    bottom: calc($timeline-with-legend-height + $sm-spacing);
  }

  ::ng-deep.arlas-time-shortcuts--container {
    bottom: $timeline-with-legend-height;
  }
}

.arlas-map-action-container {
  position: absolute;
  right: 30px;
  bottom: 0;
  display: flex;
  flex-direction: row-reverse;
  border-radius: 4px;
  background-color: white;
  box-shadow: 0 1px 0px 1px rgb(0 0 0 / 10%);
}

.arlas-map-action-items {
  height: $map-actions-width;
  width: $map-actions-width;
  cursor: pointer;
  display: flex;
  align-items: center;

  &:hover {
    background-color: rgba(0, 0, 0, 0.05);
  }
}

.arlas-map-settings {
  position: absolute;
  top: calc($sm-spacing + $map-attributions-height + $sm-spacing + $map-actions-width + $sm-spacing + $map-actions-length + $sm-spacing);
  right: $sm-spacing;
  z-index: 2;

  .arlas-map-settings-container {
    display: flex;
    flex-direction: column;
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
    border-radius: 4px;
    background-color: white;

    .arlas-map-settings-items {
      height: $map-actions-width;
      width: $map-actions-width;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;
      border-top: 1px solid #ddd;

      &:hover {
        background-color: rgba(0, 0, 0, 0.05);
      }

      &:first-child {
        border-top: none !important;
      }
    }
  }
}

.arlas-map ::ng-deep.basemap-container {
  top: calc($sm-spacing + $map-attributions-height + $sm-spacing + $map-actions-width + $sm-spacing + $map-actions-length + $sm-spacing);
  right: calc($sm-spacing + $map-actions-width + $sm-spacing);
  z-index: 1;
}

.arlas-zoom-to-data {
  margin: 0 4px;
  background-color: #ff4081;
  color: white;
  min-width: 40px;
  border-radius: 4px;
  line-height: 28px;
  cursor: pointer;
}

.arlas-zoom-to-data-icon {
  vertical-align: middle;
  padding-left: 7px;
  margin: 3px 0;
}

.sidenav-content {
  margin-left: $left-menu-width;
}

.main_content {
  width: 100%;
  height: calc(100vh - $top-menu-height);
}

::ng-deep.bookmark-shortcut {
  top: 30px !important;
}

.result-list-tab-group ::ng-deep .mat-tab-label{
  min-width: 60px;
}

.result-list-tab-group ::ng-deep .mat-tab-label-content {
  display: flex;
  justify-content: space-between;
  width: 100%;
  gap: 0 10px;
}

.result-list-tab-group ::ng-deep .mat-tab-label-content .icon {
  flex: 1;
}

.result-list-tab-group ::ng-deep .mat-tab-label-content .name {
  flex: 5;
}

.top-left-menu {
  display: flex;
  align-items: center;
  justify-content: center;
  height: $top-menu-height;

  .img {
    width: min($left-menu-width, $top-menu-height);
    margin: 0 calc(($left-menu-width - min($left-menu-width, $top-menu-height)) / 2);
  }

  .arlas-search {
    display: flex;
    align-items: center;
    justify-content: center;
    height: $filter-height;
    padding-left: $sm-spacing;

    ::ng-deep.search-text {
      width: $search-width;
    }
  }

  .vertical-divider {
    height: $filter-height;
    padding-left: $sm-spacing;
  }

  .arlas-filters-chips-top {
    padding-left: $default-spacing;
  
    ::ng-deep.zoom {
      position: relative;
      bottom: 6px;
    }
  
    ::ng-deep.extra-counts {
      // Account for space above extra counts (centered), its height, the additional spacing and the movement up to hide part of the border
      top: calc(($top-menu-height - $filter-height) / 2 + $filter-height + $sm-spacing - $xs-border);
      z-index: 2;
    }

    ::ng-deep.title,
    ::ng-deep.separator {
      z-index: 3
    }

    // Realign box when opened
    ::ng-deep.extra-open {
      margin-top: $sm-margin;
    }
  }
}

::ng-deep.top-menu {
  height: $top-menu-height !important;
}

.title {
  font-size: 18px;
}

::ng-deep.cdk-global-scrollblock {
  overflow-y: hidden !important;
}

.shortcut-list {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  font-size: $default-font-size;
  height: $filter-height;
  z-index: 2;
  position: absolute;
  top: $sm-spacing;
  left: $sm-spacing;

  .shortcut {
    padding-left: $sm-spacing;
    height: fit-content;

    &:first-child {
      padding-left: 0;
    }

    // Manage shortcuts header height to have uniform height with filter chips
    ::ng-deep.title {
      height: $filter-height;
    }
    ::ng-deep.open_title {
      padding-bottom: calc($sm-spacing + 2px);
    }

    // Position content of the shortcut below header
    ::ng-deep.content {
      // The 3px come from the borders and lines that take 1 px each
      top: calc($filter-height + $sm-spacing + 3px);
    }

    // Manage the scroll of the powerbars
    ::ng-deep.powerbars--container {
      max-height: 300px;
    }

    // Allow for no change in size in the shortcut title section when adding a filter
    ::ng-deep.actions {
      min-width: 49px;
      justify-content: flex-end;
    }

    // Adjust brush tooltip position to tighten display
    ::ng-deep.histogram__brush-tooltip__horizontal--left,
    ::ng-deep.histogram__brush-tooltip__horizontal--right {
      top: 92px !important;
    }
    ::ng-deep.histogram {
      // Leave enough space for the histogram tooltip
      padding-bottom: 7px;
    }
  }
}
